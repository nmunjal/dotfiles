# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
#if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
#    . /etc/bash_completion
#fi

export SVN_EDITOR=vi
export PATH=/home/nmunjal/Installations/jdk1.7.0_05/bin:$PATH
# Set Hadoop-related environment variables
export HADOOP_HOME=/usr/local/hadoop

# Set JAVA_HOME (we will also configure JAVA_HOME directly for Hadoop later on)
export JAVA_HOME=/home/nmunjal/Installations/jdk1.7.0_05/
# Some convenient aliases and functions for running Hadoop-related commands
unalias fs &> /dev/null
alias fs="hadoop fs"
unalias hls &> /dev/null
alias hls="fs -ls"

# If you have LZO compression enabled in your Hadoop cluster and
# compress job outputs with LZOP (not covered in this tutorial):
# Conveniently inspect an LZOP compressed file from the command
# line; run via:
#
# $ lzohead /hdfs/path/to/lzop/compressed/file.lzo
#
# Requires installed 'lzop' command.
#
lzohead () {
    hadoop fs -cat $1 | lzop -dc | head -1000 | less
}

# Add Hadoop bin/ directory to PATH
export PATH=$PATH:$HADOOP_HOME/bin
export HADOOP_HOME_WARN_SUPPRESS="TRUE"

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
alias feb='cd /media/OS/Users/nmunjal/Dropbox/Coding/codechef/feb13'
alias mar='cd /media/OS/Users/nmunjal/Dropbox/Coding/codechef/mar13'
alias apr='cd /media/OS/Users/nmunjal/Dropbox/Coding/codechef/apr13'
alias may='cd /media/OS/Users/nmunjal/Dropbox/Coding/codechef/may13'
alias jun='cd /media/OS/Users/nmunjal/Dropbox/Coding/codechef/jun13'
alias jam='cd /media/OS/Users/nmunjal/Dropbox/Coding/codejam/13/2'
alias rest='cd /home/nmunjal/code/octo/early-poc/branches/restful-gti-rajbir'
alias android-connect="mtpfs -o allow_other /media/Xperia"
alias android-disconnect="fusermount -u /media/Xperia"
export EDITOR=vi
export LD_LIBRARY_PATH=/usr/lib/ts/Linux_intel_64/:$LD_LIBRARY_PATH
export SVN_EDITOR=vi
export GIT_EDITOR=vi

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"
export AWS_AUTO_SCALING_HOME=/home/nmunjal/scaling/scaleec2/AutoScaling-1.0.61.2
export PATH=$PATH:$AWS_AUTO_SCALING_HOME/bin 
export PATH=$PATH:/home/nmunjal/Installations/sunbird
export AWS_CREDENTIAL_FILE=/home/nmunjal/scaling/scaleec2/AutoScaling-1.0.61.2/credential-file-path.template
export AWS_ELB_HOME=/home/nmunjal/scaling/scaleec2/ElasticLoadBalancing-1.0.17.0
export PATH=$PATH:/home/nmunjal/scaling/scaleec2/ElasticLoadBalancing-1.0.17.0/bin
export EC2_HOME=/home/nmunjal/scaling/scaleec2/ec2-ami-tools-1.4.0.9
export PATH=$PATH:/home/nmunjal/scaling/scaleec2/ec2-ami-tools-1.4.0.9/bin
export AWS_CLOUDWATCH_HOME=/home/nmunjal/scaling/scaleec2/CloudWatch-1.0.13.4
export PATH=$PATH:/home/nmunjal/scaling/scaleec2/CloudWatch-1.0.13.4/bin
